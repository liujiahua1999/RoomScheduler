
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

class DBConnection
{
//From template
    private static Connection connection;
    private static final String user = "java";
    private static final String password = "java";
    private static final String database = "jdbc:derby://localhost:1527/RoomSchedulerDB_JiahuaLiu_jxl6283";

    public static Connection getConnection()
    {
        if (connection == null)
        {
            try
            {
                connection = DriverManager.getConnection(database, user, password);
            } catch (SQLException e)
            {
                e.printStackTrace();
                System.out.println("Database Failed to Load");
                System.exit(1);

            }
        }
        return connection;
    }

}

public class RoomSchedulerFrame extends javax.swing.JFrame {

//operation 
    
    public DefaultListModel Status_Reservation;
    public DefaultListModel Status_Waitlist;
    public DefaultListModel Status_Faculty;
    
        public RoomSchedulerFrame() {
            
            
            
            //initialization process
        initComponents();

        ArrayList<Date> faculty = new ArrayList<>();


        
        ArrayList<Date> dates = new ArrayList<>();
        ArrayList<Reservation> reserve = Reservation_Queries.get_Reservations_By_Faculty(jComboBox_CancelReservation_Faculty.getSelectedItem().toString());
        
        for (int i = 0; i < reserve.size(); i++) {
            dates.add(reserve.get(i).get_Date());
            }
            jComboBox_CancelReservation_Date.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));
            jComboBox_Date_Reservation.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));
            ChooseDate.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));
        //Fill the get_Date
        
            Status_Reservation = new DefaultListModel();
            jList_Show_All_Reservation.setModel(Status_Reservation);
            Status_Reservation.removeAllElements();

            Status_Waitlist = new DefaultListModel();
            jList_Waitlist.setModel(Status_Waitlist);
            
                        //Fill the Waitlist
            ArrayList<Waitlist> waitlist = Waitlist_Queries.All();
            Status_Waitlist.removeAllElements();
            
            for (int i = 0; i < waitlist.size(); i++) {
                
                Status_Waitlist.addElement("Faculty: " + waitlist.get(i).get_Faculty() + "    Date: " + waitlist.get(i).get_Date() + "   Seats: " + waitlist.get(i).get_Seats());
                
            }
            //Get Faculty
            Status_Faculty = new DefaultListModel();
            jList_FacultyReservation.setModel(Status_Faculty);
            
            ArrayList<String> room = new ArrayList<>();
            ArrayList<Rooms> rooms = Room_Queries.get_All_Rooms();
                for (int i = 0; i < rooms.size(); i++) {
                    room.add(rooms.get(i).getName());
                }
            jComboBox_DropRoom.setModel(new javax.swing.DefaultComboBoxModel(room.toArray()));
            
            
                   jComboBox_FacultyList_Reservation.setModel(new javax.swing.DefaultComboBoxModel(Faculty.get_Faculty().toArray()));

       jComboBox_FacultyList.setModel(new javax.swing.DefaultComboBoxModel(Faculty.get_Faculty().toArray()));

      jComboBox_CancelReservation_Faculty.setModel(new javax.swing.DefaultComboBoxModel(Faculty.get_Faculty().toArray()));
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        main = new javax.swing.JTabbedPane();
        Reservation_Management = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_FacultyList_Reservation = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_Date_Reservation = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldSeatsReserve = new javax.swing.JTextField();
        jButton_Reserve = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox_CancelReservation_Faculty = new javax.swing.JComboBox<>();
        jComboBox_CancelReservation_Date = new javax.swing.JComboBox<>();
        jButton_Cancel = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Room_Management = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_AddRoom = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_AddSeats = new javax.swing.JTextField();
        jButton_AddRoom = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox_DropRoom = new javax.swing.JComboBox<>();
        jButton_DropRoom = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        ADD = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldAddDate = new javax.swing.JTextField();
        jButton_AddDate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldFacultyName = new javax.swing.JTextField();
        jButton_AddFaculty = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        Waitlist = new javax.swing.JScrollPane();
        jList_Waitlist = new javax.swing.JList<>();
        Status_Lookup = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox_FacultyList = new javax.swing.JComboBox<>();
        jButton_FacultyReservation = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList_FacultyReservation = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_Show_All_Reservation = new javax.swing.JList<>();
        ChooseDate = new javax.swing.JComboBox<>();
        jButton_Get_All_Reservation = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Title.setFont(new java.awt.Font("BankGothic Lt BT", 1, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 0, 0));
        Title.setText("Room Scheduler");

        jLabel3.setText("Faculty");

        jComboBox_FacultyList_Reservation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Date");

        jComboBox_Date_Reservation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_Date_Reservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Date_ReservationActionPerformed(evt);
            }
        });

        jLabel5.setText("Seats");

        jButton_Reserve.setText("Reserve Reservation");
        jButton_Reserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ReserveActionPerformed(evt);
            }
        });

        jLabel12.setText("Faculty");

        jLabel13.setText("Date");

        jComboBox_CancelReservation_Faculty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_CancelReservation_Faculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CancelReservation_FacultyActionPerformed(evt);
            }
        });

        jComboBox_CancelReservation_Date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_CancelReservation_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CancelReservation_DateActionPerformed(evt);
            }
        });

        jButton_Cancel.setText("Cancel Reservation");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jLabel16.setText("Reserve Faculty Date & Seats");

        jLabel17.setText("Cancel Reservation");

        javax.swing.GroupLayout Reservation_ManagementLayout = new javax.swing.GroupLayout(Reservation_Management);
        Reservation_Management.setLayout(Reservation_ManagementLayout);
        Reservation_ManagementLayout.setHorizontalGroup(
            Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Reservation_ManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3))
            .addGroup(Reservation_ManagementLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox_CancelReservation_Faculty, 0, 121, Short.MAX_VALUE)
                    .addComponent(jComboBox_CancelReservation_Date, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
            .addGroup(Reservation_ManagementLayout.createSequentialGroup()
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Reservation_ManagementLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)))
                        .addGap(66, 66, 66)
                        .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox_FacultyList_Reservation, 0, 113, Short.MAX_VALUE)
                            .addComponent(jComboBox_Date_Reservation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldSeatsReserve))
                        .addGap(43, 43, 43)
                        .addComponent(jButton_Reserve, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Reservation_ManagementLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel17)))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        Reservation_ManagementLayout.setVerticalGroup(
            Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Reservation_ManagementLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel16)
                .addGap(21, 21, 21)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jComboBox_FacultyList_Reservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jButton_Reserve))
                .addGap(28, 28, 28)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox_Date_Reservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldSeatsReserve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel17)
                .addGap(22, 22, 22)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_CancelReservation_Faculty, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jButton_Cancel))
                .addGap(59, 59, 59)
                .addGroup(Reservation_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_CancelReservation_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        main.addTab("Reservation Management", Reservation_Management);

        jLabel8.setText("Add Room Seats");

        jLabel9.setText("Seats");

        jButton_AddRoom.setText("Add");
        jButton_AddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddRoomActionPerformed(evt);
            }
        });

        jLabel11.setText("Drop Room");

        jLabel14.setText("Room");

        jComboBox_DropRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_DropRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_DropRoomActionPerformed(evt);
            }
        });

        jButton_DropRoom.setText("Drop");
        jButton_DropRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DropRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Room_ManagementLayout = new javax.swing.GroupLayout(Room_Management);
        Room_Management.setLayout(Room_ManagementLayout);
        Room_ManagementLayout.setHorizontalGroup(
            Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Room_ManagementLayout.createSequentialGroup()
                .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Room_ManagementLayout.createSequentialGroup()
                        .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Room_ManagementLayout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(Room_ManagementLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(70, 70, 70)
                                        .addComponent(jTextField_AddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Room_ManagementLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField_AddSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(Room_ManagementLayout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox_DropRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))
                        .addGap(257, 257, 257)
                        .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Room_ManagementLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jButton_AddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Room_ManagementLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jButton_DropRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 55, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        Room_ManagementLayout.setVerticalGroup(
            Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Room_ManagementLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel8)
                .addGap(43, 43, 43)
                .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField_AddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_AddRoom))
                .addGap(55, 55, 55)
                .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_AddSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Room_ManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_DropRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_DropRoom))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        main.addTab(" Room Management", Room_Management);

        jLabel7.setText("Date");

        jButton_AddDate.setLabel("Add");
        jButton_AddDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddDateActionPerformed(evt);
            }
        });

        jLabel2.setText("Faculty Name");

        jButton_AddFaculty.setText("Add");
        jButton_AddFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddFacultyActionPerformed(evt);
            }
        });

        jLabel18.setText("Format YYYY-MM-DD");

        javax.swing.GroupLayout ADDLayout = new javax.swing.GroupLayout(ADD);
        ADD.setLayout(ADDLayout);
        ADDLayout.setHorizontalGroup(
            ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ADDLayout.createSequentialGroup()
                .addGroup(ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ADDLayout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addGroup(ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(ADDLayout.createSequentialGroup()
                                .addComponent(jTextFieldFacultyName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(jButton_AddFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ADDLayout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addGroup(ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel18)
                            .addGroup(ADDLayout.createSequentialGroup()
                                .addComponent(jTextFieldAddDate, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(jButton_AddDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(491, 491, 491))
            .addGroup(ADDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
        );
        ADDLayout.setVerticalGroup(
            ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ADDLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAddDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_AddDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addGap(33, 33, 33)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ADDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_AddFaculty)
                    .addComponent(jTextFieldFacultyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        main.addTab("Add Date/Faculty", ADD);

        jList_Waitlist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Waitlist.setViewportView(jList_Waitlist);

        main.addTab("Waitlist", Waitlist);

        jLabel10.setText("Faculty");

        jComboBox_FacultyList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton_FacultyReservation.setText("Get Reservation Status by Faculty");
        jButton_FacultyReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FacultyReservationActionPerformed(evt);
            }
        });

        jList_FacultyReservation.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList_FacultyReservation);

        jList_Show_All_Reservation.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList_Show_All_Reservation);

        ChooseDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ChooseDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseDateActionPerformed(evt);
            }
        });

        jButton_Get_All_Reservation.setText("Get Reservation Status");
        jButton_Get_All_Reservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Get_All_ReservationActionPerformed(evt);
            }
        });

        jLabel6.setText("Date");

        javax.swing.GroupLayout Status_LookupLayout = new javax.swing.GroupLayout(Status_Lookup);
        Status_Lookup.setLayout(Status_LookupLayout);
        Status_LookupLayout.setHorizontalGroup(
            Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Status_LookupLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3)
                        .addComponent(jButton_FacultyReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox_FacultyList, 0, 247, Short.MAX_VALUE))
                    .addComponent(jLabel10))
                .addGap(44, 44, 44)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_Get_All_Reservation, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(ChooseDate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Status_LookupLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Status_LookupLayout.setVerticalGroup(
            Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Status_LookupLayout.createSequentialGroup()
                .addGroup(Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Status_LookupLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_FacultyList, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Status_LookupLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChooseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addGroup(Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_FacultyReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Get_All_Reservation, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Status_LookupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(114, 114, 114))
            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        main.addTab("Faculty Member Reservation Status", Status_Lookup);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 829, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(Title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_Get_All_ReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Get_All_ReservationActionPerformed
        Date date = Date.valueOf(ChooseDate.getSelectedItem().toString());
        ArrayList<Reservation> reservation = Reservation_Queries.get_Reservations_By_Date(date);
        Status_Reservation.removeAllElements();
        for (int i = 0; i < reservation.size(); i++) {
            Status_Reservation.addElement("Faculty: " + reservation.get(i).get_Faculty() + " Room: " + reservation.get(i).get_Room() + "  Date: " + reservation.get(i).get_Date()+ " Seats Needed: " + reservation.get(i).get_Expection());
        }
    }//GEN-LAST:event_jButton_Get_All_ReservationActionPerformed

    private void ChooseDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChooseDateActionPerformed

    private void jButton_FacultyReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FacultyReservationActionPerformed

        ArrayList<Reservation> reservation =
        Reservation_Queries.get_Reservations_By_Faculty(jComboBox_FacultyList.getSelectedItem().toString());

        Status_Faculty.removeAllElements();

        //Faculty status
        for (int i = 0; i < reservation.size(); i++) {
            Status_Faculty.addElement("Room: " + reservation.get(i).get_Room() + "    Date: " + reservation.get(i).get_Date()+ "    Seats: " + reservation.get(i).get_Expection());
        }
    }//GEN-LAST:event_jButton_FacultyReservationActionPerformed

    private void jButton_AddFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddFacultyActionPerformed

        if (Faculty.add_Faculty(jTextFieldFacultyName.getText())) {
            JOptionPane.showMessageDialog(this, "Faculty "+ jTextFieldFacultyName.getText() + "  Added Successfullly");
            //add Faculty
            jComboBox_FacultyList_Reservation.setModel(new javax.swing.DefaultComboBoxModel(Faculty.get_Faculty().toArray()));
            jComboBox_FacultyList.setModel(new javax.swing.DefaultComboBoxModel(Faculty.get_Faculty().toArray()));
            jComboBox_CancelReservation_Faculty.setModel(new javax.swing.DefaultComboBoxModel(Faculty.get_Faculty().toArray()));
            //refresh
            ArrayList<Date> Dates = new ArrayList<>();
            ArrayList<Reservation> reservation = Reservation_Queries.get_Reservations_By_Faculty(jComboBox_CancelReservation_Faculty.getSelectedItem().toString());
            for (int i = 0; i < reservation.size(); i++) {

                Dates.add(reservation.get(i).get_Date());
            }
            //jComboBox_CancelReservation_Date.setModel(new javax.swing.DefaultComboBoxModel(Dates.toArray()));

            jTextFieldFacultyName.setText("");
        }
        else
        JOptionPane.showMessageDialog(this, "Failed to Added");
        //thrwon error
    }//GEN-LAST:event_jButton_AddFacultyActionPerformed

    private void jButton_AddDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddDateActionPerformed
        Date date = Date.valueOf(jTextFieldAddDate.getText());
        Dates.add_Dates(date);


            jComboBox_CancelReservation_Date.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));
            jComboBox_Date_Reservation.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));
            ChooseDate.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));

        JOptionPane.showMessageDialog(this, "Dates successfully Added");
    }//GEN-LAST:event_jButton_AddDateActionPerformed

    private void jButton_DropRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DropRoomActionPerformed
//首先说明，整个数据库实现没有关系性，我们也不去考虑并发以及操作原子性的问题。放在并发环境这个操作很可能会出问题的。        
//添加新方法 get_Reservations_By_Room 保存所有和room相关的预定
        System.out.println("Dropping Room "+jComboBox_DropRoom.getSelectedItem().toString());
        ArrayList<Reservation> reservationList = Reservation_Queries.get_Reservations_By_Room(jComboBox_DropRoom.getSelectedItem().toString());
        //drop掉这些预定
        Reservation_Queries.delete_Reservation(jComboBox_DropRoom.getSelectedItem().toString());
        //drop掉room
        Room_Queries.drop_Room(jComboBox_DropRoom.getSelectedItem().toString());
        reservationList.forEach(r -> {
            //记得生产环境禁用调试语句
            System.out.println("Reservation room: "+r.get_Room()+" Faculty: "+r.get_Faculty()+" Seats: "+r.get_Expection()+"/"+r.get_Seats()+" Date: "+r.get_Date());
            //将每一个被删除的预定转化为一个waitlist entry添加到等候列表中。这里使用了expection表达原始的人数需求，避免需求失真
            Waitlist_Queries.add_Waitlist_Entry(r.get_Faculty(), r.get_Date(),r.get_Expection());
        });
        //普通变量小写开头，注意避免局部变量隐藏field的情况（原本这里用的是Waitlist）
        ArrayList<Waitlist> waitlist = Waitlist_Queries.All();
        //boolean removed = false;
        //Drop Room

        JOptionPane.showMessageDialog(this, "Dropped");
        //遍历
       for (int i = 0; i < waitlist.size(); i++) {
           //尝试将一个waitlist entry添加预定
            //如果添加成功 从waitlist移除此entry      Delete from Waitlist
            if (Reservation_Queries.add_Reservation_Entry
            (waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date(), waitlist.get(i).get_Seats())) {
                //removed = true;
                Waitlist_Queries.delete_Waitlist_Entry(waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date());
                JOptionPane.showMessageDialog(this, "Successfully Removed from Waitlist ");
            }
            
            //添加wait list entry功能在前面就实现了
            //如果循环到目前为止没有发生过waitlist变动（没有发生将waitlist条目变化为预定）
//         if (removed == false)  {
//             
//            Waitlist_Queries.add_Waitlist_Entry
//            (waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date(), waitlist.get(i).get_Seats());
//            JOptionPane.showMessageDialog(this, "Added to Waitlist");
//            }
            
        }
       //此处更新Drop room部分droplist信息
       {
         Rooms_info();
       }
       //此处更新Waitlist栏目信息
       {
         waitlist = Waitlist_Queries.All();
           Status_Waitlist.removeAllElements();
            for (int i = 0; i < waitlist.size(); i++) {
                Status_Waitlist.addElement("Faculty: " + waitlist.get(i).get_Faculty() + "    Date: " + waitlist.get(i).get_Date() + "   Seats: " + waitlist.get(i).get_Seats());
            }
        }
       
    
    }//GEN-LAST:event_jButton_DropRoomActionPerformed

    private void jComboBox_DropRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_DropRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_DropRoomActionPerformed

    private void jButton_AddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddRoomActionPerformed

        Room_Queries.add_Room
        (jTextField_AddRoom.getText(), Integer.parseInt(jTextField_AddSeats.getText()));

        ArrayList<Waitlist> waitlist = Waitlist_Queries.All();
        JOptionPane.showMessageDialog(this, "Successfully Added Room: " + jTextField_AddRoom.getText() + "  Seats: " + jTextField_AddSeats.getText());
        //edit database to add Room and seat
        //新增
        ArrayList<Waitlist> filteredList = new ArrayList();
        for (int i = 0; i < waitlist.size(); i++) {

            boolean Result = Reservation_Queries.add_Reservation_Entry
            (waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date(), waitlist.get(i).get_Seats());
            if (Result) {
                Waitlist_Queries.EOF_delete_Waitlist_Entry(waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date());
                JOptionPane.showMessageDialog(this, "Waitlist member Successfully Reserved");
            }
            else{
                filteredList.add(waitlist.get(i));
            }
        }

        jList_Show_All_Reservation.setModel(Status_Reservation);
        Status_Reservation.removeAllElements();
        //修改
        Status_Waitlist.removeAllElements();
            for (int i = 0; i < filteredList.size(); i++) {
                Status_Waitlist.addElement("Faculty: " + filteredList.get(i).get_Faculty() + "    Date: " + filteredList.get(i).get_Date() + "   Seats: " + filteredList.get(i).get_Seats());
            }

        Rooms_info();
        //call avoid conflict
    }//GEN-LAST:event_jButton_AddRoomActionPerformed

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed

        //Cancel the Reservation

        Reservation_Queries.cancel_Reservation
        (jComboBox_CancelReservation_Faculty.getSelectedItem().toString(), Date.valueOf(jComboBox_CancelReservation_Date.getSelectedItem().toString()));

        Waitlist_Queries.delete_Waitlist_Entry
        (jComboBox_CancelReservation_Faculty.getSelectedItem().toString(), Date.valueOf(jComboBox_CancelReservation_Date.getSelectedItem().toString()));

        JOptionPane.showMessageDialog(this, "Successfully Canceled: "+ jComboBox_CancelReservation_Faculty.getSelectedItem().toString() + "  Date: "+jComboBox_CancelReservation_Date.getSelectedItem().toString());
        ArrayList<Waitlist> waitlist = Waitlist_Queries.All();

        //check if it there is avaliable Waitlist member to add
        for (int i = 0; i < waitlist.size(); i++) {

            int seats = waitlist.get(i).get_Seats();
            boolean result = Reservation_Queries.add_Reservation_Entry(waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date(), seats);
            if (result) {
                Waitlist_Queries.delete_Waitlist_Entry(waitlist.get(i).get_Faculty(), waitlist.get(i).get_Date());
                JOptionPane.showMessageDialog(this, "Successfully Removed from Waitlist ");

            }
        }
                   
       {
         waitlist = Waitlist_Queries.All();
           Status_Waitlist.removeAllElements();
            for (int i = 0; i < waitlist.size(); i++) {
                Status_Waitlist.addElement("Faculty: " + waitlist.get(i).get_Faculty() + "    Date: " + waitlist.get(i).get_Date() + "   Seats: " + waitlist.get(i).get_Seats());
            }
        }
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jComboBox_CancelReservation_FacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CancelReservation_FacultyActionPerformed
        ArrayList<Date> dates = new ArrayList<>();

        ArrayList<Reservation> reserve = Reservation_Queries.get_Reservations_By_Faculty(jComboBox_CancelReservation_Faculty.getSelectedItem().toString());
        for (int i = 0; i < reserve.size(); i++) {
            dates.add(reserve.get(i).get_Date());
        }
        jComboBox_CancelReservation_Date.setModel(new javax.swing.DefaultComboBoxModel(Dates.get_Dates().toArray()));
    }//GEN-LAST:event_jComboBox_CancelReservation_FacultyActionPerformed

    private void jButton_ReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ReserveActionPerformed

        boolean out = Reservation_Queries.add_Reservation_Entry
        (jComboBox_FacultyList_Reservation.getSelectedItem().toString(), Date.valueOf(jComboBox_Date_Reservation.getSelectedItem().toString()), Integer.parseInt(jTextFieldSeatsReserve.getText()));

        JOptionPane.showMessageDialog(this, "Reservation Name: "+jComboBox_FacultyList_Reservation.getSelectedItem().toString() + "  Date: "+jComboBox_Date_Reservation.getSelectedItem().toString()+" Seats: " +jTextFieldSeatsReserve.getText());
        
        //add reservation
        if (out == false) {
            Waitlist_Queries.add_Waitlist_Entry

            (jComboBox_FacultyList_Reservation.getSelectedItem().toString(), Date.valueOf(jComboBox_Date_Reservation.getSelectedItem().toString()), Integer.parseInt(jTextFieldSeatsReserve.getText()));
            JOptionPane.showMessageDialog(this, "Full, Added to Waitlist");
            ArrayList<Waitlist> waitlist = Waitlist_Queries.All();
            Status_Waitlist.removeAllElements();
            for (int i = 0; i < waitlist.size(); i++) {
                Status_Waitlist.addElement("Faculty: " + waitlist.get(i).get_Faculty() + "    Date: " + waitlist.get(i).get_Date() + "   Seats: " + waitlist.get(i).get_Seats());
            }

        }
    }//GEN-LAST:event_jButton_ReserveActionPerformed

    private void jComboBox_Date_ReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Date_ReservationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_Date_ReservationActionPerformed

    private void jComboBox_CancelReservation_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CancelReservation_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_CancelReservation_DateActionPerformed
    //avoid error
    
    void Rooms_info() {
        //Fill the rooms information
        ArrayList<String> Rooms = new ArrayList<>();
        ArrayList<Rooms> rooms = Room_Queries.get_All_Rooms();
        
        for (int i = 0; i < rooms.size(); i++) {
            
            Rooms.add(rooms.get(i).getName());
            
        }
        jComboBox_DropRoom.setModel(new javax.swing.DefaultComboBoxModel(Rooms.toArray()));
    }
    /**
     * @param args the command line arguments
     */
        public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new RoomSchedulerFrame().setVisible(true);
                }
            });
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ADD;
    private javax.swing.JComboBox<String> ChooseDate;
    private javax.swing.JPanel Reservation_Management;
    private javax.swing.JPanel Room_Management;
    private javax.swing.JPanel Status_Lookup;
    private javax.swing.JLabel Title;
    private javax.swing.JScrollPane Waitlist;
    private javax.swing.JButton jButton_AddDate;
    private javax.swing.JButton jButton_AddFaculty;
    private javax.swing.JButton jButton_AddRoom;
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_DropRoom;
    private javax.swing.JButton jButton_FacultyReservation;
    private javax.swing.JButton jButton_Get_All_Reservation;
    private javax.swing.JButton jButton_Reserve;
    private javax.swing.JComboBox<String> jComboBox_CancelReservation_Date;
    private javax.swing.JComboBox<String> jComboBox_CancelReservation_Faculty;
    private javax.swing.JComboBox<String> jComboBox_Date_Reservation;
    private javax.swing.JComboBox<String> jComboBox_DropRoom;
    private javax.swing.JComboBox<String> jComboBox_FacultyList;
    private javax.swing.JComboBox<String> jComboBox_FacultyList_Reservation;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList_FacultyReservation;
    private javax.swing.JList<String> jList_Show_All_Reservation;
    private javax.swing.JList<String> jList_Waitlist;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextFieldAddDate;
    private javax.swing.JTextField jTextFieldFacultyName;
    private javax.swing.JTextField jTextFieldSeatsReserve;
    private javax.swing.JTextField jTextField_AddRoom;
    private javax.swing.JTextField jTextField_AddSeats;
    private javax.swing.JTabbedPane main;
    // End of variables declaration//GEN-END:variables
}
